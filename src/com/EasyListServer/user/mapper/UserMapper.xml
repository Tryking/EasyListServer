<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.EasyListServer.user.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.EasyListServer.user.pojo.User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="memberId" property="memberid" jdbcType="VARCHAR" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="INTEGER" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="qq" property="qq" jdbcType="VARCHAR" />
    <result column="qqName" property="qqname" jdbcType="VARCHAR" />
    <result column="sina" property="sina" jdbcType="VARCHAR" />
    <result column="sinaName" property="sinaname" jdbcType="VARCHAR" />
    <result column="signature" property="signature" jdbcType="VARCHAR" />
    <result column="createdTime" property="createdtime" jdbcType="TIMESTAMP" />
    <result column="updatedTime" property="updatedtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, memberId, account, password, gender, phone, qq, qqName, sina, sinaName, signature, 
    createdTime, updatedTime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.EasyListServer.user.pojo.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.EasyListServer.user.pojo.UserExample" >
    delete from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.EasyListServer.user.pojo.User" >
    insert into user (id, memberId, account, 
      password, gender, phone, 
      qq, qqName, sina, sinaName, 
      signature, createdTime, updatedTime
      )
    values (#{id,jdbcType=BIGINT}, #{memberid,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, 
      #{qq,jdbcType=VARCHAR}, #{qqname,jdbcType=VARCHAR}, #{sina,jdbcType=VARCHAR}, #{sinaname,jdbcType=VARCHAR}, 
      #{signature,jdbcType=VARCHAR}, #{createdtime,jdbcType=TIMESTAMP}, #{updatedtime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.EasyListServer.user.pojo.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="memberid != null" >
        memberId,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="qq != null" >
        qq,
      </if>
      <if test="qqname != null" >
        qqName,
      </if>
      <if test="sina != null" >
        sina,
      </if>
      <if test="sinaname != null" >
        sinaName,
      </if>
      <if test="signature != null" >
        signature,
      </if>
      <if test="createdtime != null" >
        createdTime,
      </if>
      <if test="updatedtime != null" >
        updatedTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="memberid != null" >
        #{memberid,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="qqname != null" >
        #{qqname,jdbcType=VARCHAR},
      </if>
      <if test="sina != null" >
        #{sina,jdbcType=VARCHAR},
      </if>
      <if test="sinaname != null" >
        #{sinaname,jdbcType=VARCHAR},
      </if>
      <if test="signature != null" >
        #{signature,jdbcType=VARCHAR},
      </if>
      <if test="createdtime != null" >
        #{createdtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedtime != null" >
        #{updatedtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.EasyListServer.user.pojo.UserExample" resultType="java.lang.Integer" >
    select count(*) from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.memberid != null" >
        memberId = #{record.memberid,jdbcType=VARCHAR},
      </if>
      <if test="record.account != null" >
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null" >
        gender = #{record.gender,jdbcType=INTEGER},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null" >
        qq = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.qqname != null" >
        qqName = #{record.qqname,jdbcType=VARCHAR},
      </if>
      <if test="record.sina != null" >
        sina = #{record.sina,jdbcType=VARCHAR},
      </if>
      <if test="record.sinaname != null" >
        sinaName = #{record.sinaname,jdbcType=VARCHAR},
      </if>
      <if test="record.signature != null" >
        signature = #{record.signature,jdbcType=VARCHAR},
      </if>
      <if test="record.createdtime != null" >
        createdTime = #{record.createdtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedtime != null" >
        updatedTime = #{record.updatedtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user
    set id = #{record.id,jdbcType=BIGINT},
      memberId = #{record.memberid,jdbcType=VARCHAR},
      account = #{record.account,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=INTEGER},
      phone = #{record.phone,jdbcType=VARCHAR},
      qq = #{record.qq,jdbcType=VARCHAR},
      qqName = #{record.qqname,jdbcType=VARCHAR},
      sina = #{record.sina,jdbcType=VARCHAR},
      sinaName = #{record.sinaname,jdbcType=VARCHAR},
      signature = #{record.signature,jdbcType=VARCHAR},
      createdTime = #{record.createdtime,jdbcType=TIMESTAMP},
      updatedTime = #{record.updatedtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.EasyListServer.user.pojo.User" >
    update user
    <set >
      <if test="memberid != null" >
        memberId = #{memberid,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="qqname != null" >
        qqName = #{qqname,jdbcType=VARCHAR},
      </if>
      <if test="sina != null" >
        sina = #{sina,jdbcType=VARCHAR},
      </if>
      <if test="sinaname != null" >
        sinaName = #{sinaname,jdbcType=VARCHAR},
      </if>
      <if test="signature != null" >
        signature = #{signature,jdbcType=VARCHAR},
      </if>
      <if test="createdtime != null" >
        createdTime = #{createdtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedtime != null" >
        updatedTime = #{updatedtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.EasyListServer.user.pojo.User" >
    update user
    set memberId = #{memberid,jdbcType=VARCHAR},
      account = #{account,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      qqName = #{qqname,jdbcType=VARCHAR},
      sina = #{sina,jdbcType=VARCHAR},
      sinaName = #{sinaname,jdbcType=VARCHAR},
      signature = #{signature,jdbcType=VARCHAR},
      createdTime = #{createdtime,jdbcType=TIMESTAMP},
      updatedTime = #{updatedtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>